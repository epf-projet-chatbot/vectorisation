#!/usr/bin/env python3
"""
Script d'initialisation pour t√©l√©charger les ressources NLTK n√©cessaires.
√Ä ex√©cuter apr√®s l'installation des requirements.
"""

import nltk
import ssl

def download_nltk_resources():
    """T√©l√©charge les ressources NLTK n√©cessaires pour le chunker avanc√©."""
    
    try:
        # Pour √©viter les probl√®mes SSL sur certains syst√®mes
        try:
            _create_unverified_https_context = ssl._create_unverified_context
        except AttributeError:
            pass
        else:
            ssl._create_default_https_context = _create_unverified_https_context
        
        print("üì• T√©l√©chargement des ressources NLTK...")
        
        # Ressources n√©cessaires pour le chunker avanc√©
        resources = [
            'punkt',      # Pour la segmentation des phrases
            'punkt_tab',  # Nouvelle version de punkt
            'stopwords',  # Mots vides (optionnel mais utile)
            'averaged_perceptron_tagger',  # POS tagging (optionnel)
        ]
        
        for resource in resources:
            try:
                print(f"  ‚¨áÔ∏è  T√©l√©chargement de '{resource}'...")
                nltk.download(resource, quiet=True)
                print(f"  ‚úÖ '{resource}' t√©l√©charg√© avec succ√®s")
            except Exception as e:
                print(f"  ‚ö†Ô∏è  Erreur lors du t√©l√©chargement de '{resource}': {e}")
        
        print("\nüéâ Configuration NLTK termin√©e !")
        
        # Test rapide pour v√©rifier que tout fonctionne
        print("\nüß™ Test rapide...")
        try:
            from nltk.tokenize import sent_tokenize
            test_text = "Ceci est une phrase de test. Voici une seconde phrase."
            sentences = sent_tokenize(test_text, language='french')
            print(f"  ‚úÖ Segmentation test√©e: {len(sentences)} phrases d√©tect√©es")
        except Exception as e:
            print(f"  ‚ùå Erreur de test: {e}")
            
    except Exception as e:
        print(f"‚ùå Erreur g√©n√©rale: {e}")

if __name__ == "__main__":
    download_nltk_resources()
